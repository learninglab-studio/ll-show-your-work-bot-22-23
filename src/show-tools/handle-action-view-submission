const { findRecordByValue, findRecordById, addRecord } = require('../utilities/airtable-tools')
const { magenta, gray, yellow, blue, divider, red } = require('../utilities/mk-loggers')

module.exports = async ({ ack, body, view, client, logger }) => {
    // Acknowledge the view_submission request
    ack();
    red(divider, divider, "modal_action_submission", divider, divider)
    blue(divider, "view", view)
    darkgray(divider, "body", body)
  
    // Assume there's an input block with `block_1` as the block_id and `input_a`
    const val = view['state']['values']['action_title']['plain_text_input-action']['value'];
    const user = body['user']['id'];
    try {
      const personResult = await findRecordByValue({
        baseId: process.env.AIRTABLE_22_23_BASE,
        table: "Users",
        field: "DevSlackId",
        value: user
      })
      try {
        const airtableResult = await addRecord({
          baseId: process.env.AIRTABLE_22_23_BASE,
                table: "Actions",
                record: {
                    Name: "Title of Action",
                    // command.user_id,
                    // command.channel_id,
                }
        })

        await client.chat.postMessage({
          channel: user,
          text: msg
        });
      }
      catch (error) {
        logger.error(error);
      }


    } catch (error) {
      try {
      await client.chat.postMessage({
        channel: user,
        text: msg
      });
      }
      catch (error) {
        logger.error(error);
      }


    }
    

    
    // Message to send user
    let msg = '';
    // Save to DB
    const results = await db.set(user.input, val);
  
    if (results) {
      // DB save was successful
      msg = 'Your submission was successful';
    } else {
      msg = 'There was an error with your submission';
    }
  
    // Message the user
    
  
  }
